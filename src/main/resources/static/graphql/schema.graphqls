schema {
    query: Query
    mutation: Mutation
    subscription: SubScription
}

type Query {
    allUsers: [User]
    user: User
    login(id: String!, password: String!): Token

    categories: [Category!]
}

type Mutation {
    sign(id: String!, password: String!, name: String!): Int
    createCategory(title: String!): Int!
    updateCategory(id: Int!, title: String!): Int!
    deleteCategory(id: Int!): Int!
}

type SubScription {

}

type User {
    id: Long!
    email: String!
    name: String!
    authority: String
}

type Token {
    status: Int!
    token: String
}

type Category {
    id: Long!
    name: String!
    contents: [Content!]!
}

type Content {
    id: Long!
    category: [Category!]!,
    title: String!
}

scalar Long